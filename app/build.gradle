buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    configurations.all {
        resolutionStrategy {
            force 'net.sf.proguard:proguard-gradle:6.1.0beta2'
        }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.1'
    }
}


apply plugin: 'com.android.application'
//apply plugin: 'me.tatarka.retrolambda'
//apply plugin: 'io.fabric'

//def AAVersion = '4.3.1'
//dependencies {
//    annotationProcessor "org.androidannotations:androidannotations:$AAVersion"
//    implementation "org.androidannotations:androidannotations-api:$AAVersion"
//}


repositories {
    maven {
        url "https://maven.google.com"
    }
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url "https://raw.github.com/embarkmobile/zxing-android-minimal/mvn-repo/maven-repository/"
    }
    maven {
        url "https://jitpack.io"
    }
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    flatDir {
        dirs 'libs'
    }
}

def generateVersionNumber = { ->
    StringBuilder stringBuilder = new StringBuilder()
    stringBuilder.append((new Date()).format('yyMMddHHmm'))
    return Integer.parseInt(stringBuilder.toString())
}

def generateVersionNumberString = { ->
    StringBuilder stringBuilder = new StringBuilder()
    stringBuilder.append((new Date()).format('yyMMddHHmm'))
    return stringBuilder.toString()
}

def generateTimestamp = { ->
    StringBuilder stringBuilder = new StringBuilder()
    stringBuilder.append((new Date()).getTime())
    stringBuilder.append("L");
    return stringBuilder.toString()
}

def generateRandomUUID = { ->
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append('"' + UUID.randomUUID().toString() + '"')
    return stringBuilder.toString()
}

def generateVersionName = { ->

    StringBuilder stringBuilder = new StringBuilder()
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--always'
            standardOutput = stdout
        }
        String commitObject = stdout.toString().trim()
        try {
            stdout = new ByteArrayOutputStream()
            exec {
                commandLine 'git', 'describe', '--tags'
                standardOutput = stdout
            }
            //stringBuilder.append(stdout.toString().trim())
            //stringBuilder.append("-")
        } catch (ignored) {
            // no tags
        }

        stringBuilder.append(commitObject)
        stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--show-toplevel'
            standardOutput = stdout
        }
        if (stdout.toString().trim().contains("xDrip-Experimental")) {
            stringBuilder.append("-experimental")
        }

        stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
            standardOutput = stdout
        }
        String branch = stdout.toString().trim()
        if (!branch.equals("master")) {
            stringBuilder.append('-')
            stringBuilder.append(branch)
        }

    } catch (ignored) {
        return "NoGitSystemAvailable"
    }
    stringBuilder.append('-')
    stringBuilder.append((new Date()).format('yyyy.MM.dd'))
    return stringBuilder.toString()

}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.eveningoutpost.dexdrip"
        minSdkVersion 26
        // increasing target SDK version can cause compatibility issues with Android 7+
        targetSdkVersion 28
        // change versionCode only when downgrade should be prevented
        // eg, when data structures are incompatible
        versionCode 1603091400
        versionName generateVersionName()
        buildConfigField "int", "buildVersion", generateVersionNumberString()
        buildConfigField "String", "buildUUID", generateRandomUUID()
        buildConfigField "long", "buildTimestamp", generateTimestamp()
        buildConfigField "int", "targetSDK", targetSdkVersion.mApiLevel.toString()
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
    }
    testOptions {
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false

//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            testProguardFile 'proguard-debug.pro'
            ext.enableCrashlytics = false
            //      applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
        }
    }
}

// auto test rig
task AutoInstall(type: Exec) {
    commandLine "bash", "$projectDir/autoinstallviausb"
}

// auto tester
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        if (System.getenv('USERDOMAIN') == "PC-PC") {
            task.finalizedBy 'AutoTestRig'
            AutoTestRig.outputs.upToDateWhen { false }
        }
    }
}

task AutoTestRig() doLast {
    AutoInstall.execute()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha04'
    implementation 'androidx.core:core:1.1.0-alpha04'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'androidx.preference:preference:1.1.0-alpha03'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0-alpha01'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation project(':localeapi')
    //implementation 'com.nispok:snackbar:2.10.8'

    // use specific version of data binding until google resolves the bugs with mixed case package names
    implementation 'androidx.databinding:databinding-adapters:3.5.0-alpha06'
    implementation 'androidx.databinding:databinding-runtime:3.5.0-alpha06'
    implementation 'androidx.databinding:databinding-common:3.5.0-alpha06'

    implementation 'com.google.firebase:firebase-messaging:17.4.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-wearable:16.0.1'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation "com.google.android.gms:play-services-gcm:16.1.0"

    implementation 'com.squareup.wire:wire-runtime:2.3.0-RC1'

    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'com.squareup.okhttp:logging-interceptor:2.7.5'

    implementation 'com.squareup.okhttp3:okhttp:3.13.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.13.1'

    implementation 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    implementation 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    implementation 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    implementation 'com.squareup.retrofit:converter-moshi:2.0.0-beta2'
    implementation 'com.squareup.retrofit:converter-protobuf:2.0.0-beta2'
    implementation 'com.squareup.retrofit:retrofit-adapters:2.0.0-beta2'

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.5.0'
//    implementation 'com.squareup.retrofit2:converter-protobuf:2.0.0'
    implementation 'com.squareup.retrofit2:retrofit-adapters:2.5.0'

    implementation 'com.squareup.moshi:moshi:1.8.0'
    //implementation 'org.influxdb:influxdb-java:2.6'
    implementation 'com.google.code.gson:gson:2.8.5'
//    implementation 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    implementation 'com.getpebble:pebblekit:4.0.1'
    implementation 'com.github.jamorham:amazfitcommunication:master-SNAPSHOT'

    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.8'

    implementation 'com.activeandroid:thread-safe-active-android:3.1.1'
    //implementation 'com.github.lecho:hellocharts-android:v1.5.8'
    implementation "com.polidea.rxandroidble:rxandroidble:1.7.0"
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'com.embarkmobile:zxing-android-minimal:2.0.0@aar'
    implementation 'com.embarkmobile:zxing-android-integration:2.0.0@aar'
    //implementation 'com.embarkmobile:zxing-android-legacy:2.0.0@aar'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'net.tribe7.seeds:seeds-functional:16.0.1'
    implementation 'net.tribe7.seeds:seeds-primitives:16.0.1'
    //https://github.com/evant/binding-collection-adapter/blob/master/CHANGELOG.md#300
    //Removed LayoutManagers
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:3.0.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:3.0.0'

    implementation 'org.slf4j:slf4j-api:1.8.0-beta4'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true
    }
    implementation 'uk.com.robust-it:cloning:1.9.12'
    implementation 'com.github.amlcurran.showcaseview:library:5.4.3'
    // implementation 'com.itextpdf:itextg:5.5.9'

    // Pebble-Trend, needs to be checked if really needed
    //implementation 'com.android.support:multidex:1.0.1'
    implementation 'ar.com.hjg:pngj:2.1.0'
    //implementation 'com.bugfender.sdk:android:0.+'
    // implementation 'com.rarepebble:colorpicker:1.7.0'
    implementation(name: 'colorpicker', ext: 'aar')
    implementation(name: 'hellocharts-library-release', ext: 'aar')
    implementation 'com.evernote:android-job:1.3.0-alpha09'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.objenesis:objenesis:3.0.1'
    testImplementation 'org.hamcrest:hamcrest-library:2.1'
    testImplementation 'org.robolectric:robolectric:4.2'
    testImplementation 'com.google.truth:truth:0.43'

    testImplementation 'org.mockito:mockito-core:2.8.9'
    testImplementation 'org.powermock:powermock-core:1.7.1'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.1'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.7.1'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.7.1'
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.1'


    androidTestImplementation('com.schibsted.spain:barista:1.7.0') {
        exclude group: 'com.android.support'
    }
    // espresso, workarounds needed for correct functioning
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation 'androidx.test:runner:1.1.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.1.1'
    // add this for intent mocking support
    //androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'
    // add this for webview testing support
    //androidTestImplementation 'com.android.support.test.espresso:espresso-web:3.0.1'

    // you will want to install the android studio lombok plugin
    compileOnly 'org.projectlombok:lombok:1.18.6'
    //  compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    annotationProcessor "org.projectlombok:lombok:1.18.6"

    wearApp project(':wear')
    //weapApp files('../wear/build/outputs/apk/wear_release.apk')
    //testimplementation 'com.squareup.okhttp:mockwebserver:2.5.0'
    implementation('com.github.nightscout:android-uploader:CORE_FOR_XDRIP') {
        transitive = false
    }
    implementation 'com.google.dagger:dagger-android:2.21'
    //implementation 'com.google.dagger:dagger-android-support:2.x' // if you use the support libraries
    annotationProcessor 'com.google.dagger:dagger-compiler:2.21'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
}

apply plugin: 'com.google.gms.google-services'
